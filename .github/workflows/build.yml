name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
        packages: write
        contents: read
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/app:latest .

      # Push the Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Checkout the code (optional if no deployment script needed)
      - name: Checkout code
        uses: actions/checkout@v3

      # Prepare the SSH key to access the Azure VM
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_PRIVATE_KEY }}

      # Deploy to Azure VM via SSH
      - name: Deploy Docker Image on Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USER }}@${{ secrets.AZURE_HOST }} << EOF
            sudo -s
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ github.repository }}/my-app:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -e API_KEY=${{ secrets.GFMS_APIKEY }} --name gfms-monkey -p 127.0.0.1:8080:80 ghcr.io/${{ github.repository }}/app:latest
          EOF
